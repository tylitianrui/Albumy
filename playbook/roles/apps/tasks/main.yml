---
- name: Install common libs using apt-get tool
  apt: pkg={{ item }} state=present
  with_items:
    - git
    - libjpeg-dev
    - python
    - libxml2-dev
    - libxslt1-dev
    - python-dev
    - python-setuptools
    - python-pip
    - libffi-dev
    - python-virtualenv
    - python-lxml
    - zlib1g-dev
    - libssl-dev

- name: Create virtualenv
  command: creates={{ venv_dir }} virtualenv -p /usr/bin/python3 {{ venv_dir }}

- name: Install uwsgi
  pip: virtualenv={{ venv_dir }} name=uwsgi

- name: Install deps
  #pip: virtualenv={{ venv_dir }} requirements={{ source_dir }}/requirements/prod.txt extra_args="-i http://pypi.douban.com/simple"
  pip: virtualenv={{ venv_dir }} requirements={{ source_dir }}/requirements.txt

- name: install ï»¿supervisor
  pip: name=supervisor


#- name: Copy uwsgi init script
#  template: |
#    src=uwsgi-albumy.conf dest=/etc/init/albumy_{{ config_name }}.conf
#    owner=root group=root

- name: Create uwsgi emperor directory
  file: |
    path={{ uwsgi_emperor_dir }} state=directory
    owner=www-data group=www-data

- name: Create data_root_dir
  file: |
    path={{ data_root_dir }} state=directory
    owner=root group=root

- name: Create log_dir
  file: |
    path={{ log_dir }} state=directory
    owner=root group=root

#- name: Create data_dir
#  file: |
#    path={{ data_dir }} state=directory
#    owner=www-data group=www-data

#- name: Create tmp_dir
#  file: |
#    path={{ tmp_dir }} state=directory
#    owner=www-data group=www-data

#- name: Create symlink of data_dir
#  file: |
#    src={{ data_dir }}
#    dest={{ source_dir }}/
#    state=link force=yes
#    owner=www-data group=www-data

- name: Copy uwsgi emperor configurations
  template: |
    src={{ item }}.ini.tml dest={{ uwsgi_emperor_dir }}/{{ item }}.ini
    owner=www-data group=www-data
  with_items:
    - albumy

- name: Copy app settings.py 
  template: |
    src=settings.py.tml dest={{ source_dir }}/albumy/settings.py
    owner=www-data group=www-data

- name: Copy supervisor ini
  template: |
    src=supervisor_albumy.conf.tml dest=/etc/supervisor/conf.d/supervisor_albumy.conf
    owner=www-data group=www-data


- name: Create celery group
  group: |
    name=celery state=present

- name: Create celery user
  user: |
    name=celery  group=celery

- name: Create celery pid and log directory
  file: |
    path={{ celery_dir }} state=directory
    owner=celery group=celery

- name: Copy celeryd 
  template: |
    src=celeryd.conf.tml dest=/etc/default/albumy-{{ config_name }}-worker
    owner=root group=root
#
#- name: Copy cron.tml to /etc/cron.d
#  template: |
#    src=cron.tml dest=/etc/cron.d/catch_orders_{{ config_name }}
#    owner=root group=root
#  when: not {{ is_node }}

- name: Copy celeryd 
  template: |
    src=celeryd.tml dest=/etc/init.d/albumy-{{ config_name }}-worker
    owner=root group=root
    mode="u+x,g+x,o+x"

- name: Run app-server
  service: name=supervisor  state=restarted

- name: Run celery
  service: name=albumy-{{ config_name }}-worker state=restarted

